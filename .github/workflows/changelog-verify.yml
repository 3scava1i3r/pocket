# This runs the pre-commit hook logic to check whether the relevent
# CHANGELOG.md files have been updated for both the root directory
# and/or modules edited if they have been changed.

name: Validate Changelogs

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths-ignore:
      - ".github/**"
      - ".githooks/**"
      - "docs/**"
      - "bin/**"

jobs:
  changedfiles:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      all: ${{ steps.changes.outputs.all}}
    steps:
      # Make sure we have some code to diff.
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changes
        # Set outputs using the command.
        run: echo "all=$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | xargs)" >> $GITHUB_OUTPUT

  validate:
    runs-on: ubuntu-latest
    # require the first job to have ran
    needs: changedfiles
    # only run if there are changed files
    if: ${{needs.changedfiles.outputs.all}}
    steps:
      - uses: actions/checkout@v3
      - name: Verify changelogs
        id: verify_changelogs
        continue-on-error: true
        run: |
          echo "result=$(bash ./.githooks/pre-receive "${{ needs.changedfiles.outputs.all }}") >> $GITHUB_OUTPUT
          echo "$result"
      - name: Verify changelogs - Review
        if: ${{ steps.verify_changelogs.outcome == 'failure' }}
        uses: actions/github-script@v5
        with:
          script: |
            const result = `The changelog validation failed with the following output:

            \`\`\`
            ${{ steps.verify_changelogs.outputs.result }}
            \`\`\`

            Please update the relevant CHANGELOG.md files and ensure they follow the correct format.`;

            await github.rest.pulls.createReview({
              pull_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: result,
              event: "REQUEST_CHANGES",
            });
            process.exit(1);
